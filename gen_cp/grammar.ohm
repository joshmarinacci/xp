easy {
    Exp = File | OnBlock | Block | Cond | FuncallExp | Negation | Assignment | BooleanLiteral | ident | number | string | comment
    File = comment* Chunk+ comment*
    Chunk = OnBlock | ModeBlock | comment
    Block = "{" Exp* "}"
    ModeBlock = "mode" ident "do" Block
    OnBlock = "on" ident ident "do" Block comment*
    EventScope = "system"
    ident  (an identifier)
        = letter (letter | digit | under)* dot_part?
    dot_part
        = "." ident
    number  (a number)
        = digit+ "." digit+ --float
        | digit+ --int
    under = "_"
    q = "\'"
    qq = "\""
    comment = space* "#" toEOL
    toEOL = (~"\n" any)* "\n"

    string (text string)
        = q (~q any)* q
        | qq (~qq any)* qq
    Negation = "not" Exp
    Assignment = ident "=" Exp
    BooleanLiteral = "true" | "false"
    Cond = "if" Exp Block
    FuncallExp = ident "(" ListOf<Exp,","> ")"
}
